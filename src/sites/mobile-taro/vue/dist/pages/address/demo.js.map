{"version":3,"file":"pages/address/demo.js","sources":["webpack:///./src/pages/address/demo.vue?0e9b","webpack:///./src/pages/address/demo.vue","webpack:///./src/pages/address/index.taro.vue","webpack:///./src/pages/address/demo.vue?e348","webpack:///./src/pages/address/index.taro.vue?37b3","webpack:///./src/pages/address/demo.vue?a46b","webpack:///./src/pages/address/demo.vue?2af4","webpack:///./src/pages/address/demo.vue?75e0","webpack:///./src/pages/address/demo.vue?c3a3","webpack:///./src/pages/address/index.taro.vue?b670","webpack:///./src/pages/address/index.taro.vue?106d","webpack:///./src/pages/address/index.taro.vue?0131","webpack:///./src/pages/address/index.taro.vue?2c34"],"sourcesContent":["import { render } from \"./demo.vue?vue&type=template&id=3e528abc&scoped=true\"\nimport script from \"./demo.vue?vue&type=script&lang=ts\"\nexport * from \"./demo.vue?vue&type=script&lang=ts\"\n\nimport \"./demo.vue?vue&type=style&index=0&id=3e528abc&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-3e528abc\"\n/* hot reload */\nif (module.hot) {\n  script.__hmrId = \"3e528abc\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('3e528abc', script)) {\n    api.reload('3e528abc', script)\n  }\n  \n  module.hot.accept(\"./demo.vue?vue&type=template&id=3e528abc&scoped=true\", () => {\n    api.rerender('3e528abc', render)\n  })\n\n}\n\nscript.__file = \"src/pages/address/demo.vue\"\n\nexport default script","<template>\n  <view class=\"demo\">\n    <h2>选择自定义地址</h2>\n    <nut-cell\n      title=\"选择地址\"\n      :desc=\"one\"\n      is-link\n      @click=\"showAddress\"\n    ></nut-cell>\n\n    <nut-address\n      v-model:visible=\"normal\"\n      :province=\"province\"\n      :city=\"city\"\n      :country=\"country\"\n      :town=\"town\"\n      @change=\"cal => onChange(cal, 'normal')\"\n      @close=\"close1\"\n      custom-address-title=\"请选择所在地区\"\n    ></nut-address>\n\n    <h2>选择已有地址</h2>\n    <nut-cell\n      title=\"选择地址\"\n      :desc=\"two\"\n      is-link\n      @click=\"showAddressExist\"\n    ></nut-cell>\n\n    <nut-address\n      v-model:visible=\"exist\"\n      type=\"exist\"\n      :exist-address=\"existAddress\"\n      @change=\"cal => onChange(cal, 'exist')\"\n      @close=\"close2\"\n      :is-show-custom-address=\"false\"\n      @selected=\"selected\"\n      exist-address-title=\"配送至\"\n    ></nut-address>\n\n    <h2>自定义图标</h2>\n    <nut-cell\n      title=\"选择地址\"\n      :desc=\"three\"\n      is-link\n      @click=\"showCustomImg\"\n    ></nut-cell>\n\n    <nut-address\n      v-model:visible=\"customImg\"\n      type=\"exist\"\n      :exist-address=\"existAddress\"\n      @change=\"cal => onChange(cal, 'customImg')\"\n      @close=\"close3\"\n      :is-show-custom-address=\"false\"\n      @selected=\"selected\"\n      :default-icon=\"defaultIcon\"\n      :selected-icon=\"selectedIcon\"\n      :close-btn-icon=\"closeBtnIcon\"\n    ></nut-address>\n\n    <h2>自定义地址与已有地址切换</h2>\n    <nut-cell\n      title=\"选择地址\"\n      :desc=\"four\"\n      is-link\n      @click=\"showAddressOther\"\n    ></nut-cell>\n\n    <nut-address\n      v-model:visible=\"other\"\n      type=\"exist\"\n      :exist-address=\"existAddress\"\n      :province=\"province\"\n      :city=\"city\"\n      :country=\"country\"\n      :town=\"town\"\n      :back-btn-icon=\"backBtnIcon\"\n      @change=\"cal => onChange(cal, 'other')\"\n      @close=\"close4\"\n      @selected=\"selected\"\n      custom-and-exist-title=\"选择其他地址\"\n      @switch-module=\"switchModule\"\n      @close-mask=\"closeMask\"\n    ></nut-address>\n  </view>\n</template>\n\n<script lang=\"ts\">\nimport { reactive, ref, toRefs } from 'vue';\n\nimport { createComponent } from './../../../../../../packages/utils/create';\nimport Address from './index.taro.vue';\nimport Cell from './../cell/index.taro.vue';\nconst { createDemo } = createComponent('address');\n\ninterface CalBack {\n  next: string;\n  value: string;\n  custom: string;\n}\ninterface RegionData {\n  name: string;\n  [key: string]: any;\n}\ninterface CalResult {\n  type: string;\n  data: AddressResult;\n}\ninterface AddressList {\n  id?: string | number;\n  provinceName: string;\n  cityName: string;\n  countyName: string;\n  townName: string;\n  addressDetail: string;\n  selectedAddress: boolean;\n}\ninterface AddressResult extends AddressList {\n  addressIdStr: string;\n  addressStr: string;\n  province: RegionData[];\n  city: RegionData[];\n  country: RegionData[];\n  town: RegionData[];\n}\nexport default createDemo({\n  components: {\n    'nut-address': Address,\n    'nut-cell': Cell\n  },\n  props: {},\n  setup() {\n    const address = reactive({\n      province: [\n        { id: 1, name: '北京' },\n        { id: 2, name: '广西' },\n        { id: 3, name: '江西' },\n        { id: 4, name: '四川' }\n      ],\n      city: [\n        { id: 7, name: '朝阳区' },\n        { id: 8, name: '崇文区' },\n        { id: 9, name: '昌平区' },\n        { id: 6, name: '石景山区' }\n      ],\n      country: [\n        { id: 3, name: '八里庄街道' },\n        { id: 9, name: '北苑' },\n        { id: 4, name: '常营乡' }\n      ],\n      town: []\n    });\n\n    const showPopup = reactive({\n      normal: false,\n      exist: false,\n      customImg: false,\n      other: false\n    });\n\n    const icon = reactive({\n      selectedIcon: 'heart-fill',\n      defaultIcon: 'heart1',\n      closeBtnIcon: 'close',\n      backBtnIcon: 'left'\n    });\n\n    const existAddress = ref([\n      {\n        id: 1,\n        addressDetail: '',\n        cityName: '次渠镇',\n        countyName: '通州区',\n        provinceName: '北京市',\n        selectedAddress: true,\n        townName: ''\n      },\n      {\n        id: 2,\n        addressDetail: '',\n        cityName: '钓鱼岛全区',\n        countyName: '',\n        provinceName: '钓鱼岛',\n        selectedAddress: false,\n        townName: ''\n      },\n      {\n        id: 3,\n        addressDetail: '京东大厦',\n        cityName: '大兴区',\n        countyName: '科创十一街18号院',\n        provinceName: '北京市',\n        selectedAddress: false,\n        townName: ''\n      }\n    ]);\n\n    const text = reactive({\n      one: '请选择地址',\n      two: '请选择地址',\n      three: '请选择地址',\n      four: '请选择地址'\n    });\n\n    const showAddress = () => {\n      showPopup.normal = !showPopup.normal;\n    };\n\n    const onChange = (cal: CalBack, tag: string) => {\n      const name = (address as any)[cal.next];\n      if (name.length < 1) {\n        (showPopup as any)[tag] = false;\n      }\n    };\n    const close1 = (val: CalResult) => {\n      console.log(val);\n      text.one = val.data.addressStr;\n    };\n\n    const showAddressExist = () => {\n      showPopup.exist = true;\n    };\n\n    const close2 = (val: CalResult) => {\n      console.log(val);\n      if (val.type == 'exist') {\n        const {\n          provinceName,\n          cityName,\n          countyName,\n          townName,\n          addressDetail\n        } = val.data;\n        text.two =\n          provinceName + cityName + countyName + townName + addressDetail;\n      } else {\n        text.two = val.data.addressStr;\n      }\n    };\n    const selected = (\n      prevExistAdd: AddressList,\n      nowExistAdd: RegionData,\n      arr: AddressList[]\n    ) => {\n      console.log(prevExistAdd);\n      console.log(nowExistAdd);\n    };\n\n    const showAddressOther = () => {\n      showPopup.other = true;\n    };\n    const showCustomImg = () => {\n      showPopup.customImg = true;\n    };\n\n    const close3 = (val: CalResult) => {\n      console.log(val);\n      if (val.type == 'exist') {\n        const {\n          provinceName,\n          cityName,\n          countyName,\n          townName,\n          addressDetail\n        } = val.data;\n        text.three =\n          provinceName + cityName + countyName + townName + addressDetail;\n      } else {\n        text.three = val.data.addressStr;\n      }\n    };\n\n    const close4 = (val: CalResult) => {\n      console.log(val);\n      if (val.type == 'exist') {\n        const {\n          provinceName,\n          cityName,\n          countyName,\n          townName,\n          addressDetail\n        } = val.data;\n        text.four =\n          provinceName + cityName + countyName + townName + addressDetail;\n      } else {\n        text.four = val.data.addressStr;\n      }\n    };\n\n    const switchModule = (val: CalResult) => {\n      if (val.type == 'custom') {\n        console.log('点击了“选择其他地址”按钮');\n      } else {\n        console.log('点击了自定义地址左上角的返回按钮');\n      }\n    };\n\n    const closeMask = (val: CalResult) => {\n      console.log('关闭弹层', val);\n    };\n\n    return {\n      showAddress,\n      showPopup,\n      onChange,\n      close1,\n      showAddressExist,\n      close2,\n      selected,\n      existAddress,\n      showAddressOther,\n      showCustomImg,\n      close3,\n      close4,\n      switchModule,\n      closeMask,\n      ...toRefs(icon),\n      ...toRefs(text),\n      ...toRefs(showPopup),\n      ...toRefs(address)\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.demo {\n  .nut-cell {\n    align-items: center;\n\n    .nut-cell__value {\n      margin-right: 8px;\n    }\n  }\n}\n</style>\n","<template>\n  <nut-popup\n    position=\"bottom\"\n    @close=\"close\"\n    @click-overlay=\"clickOverlay\"\n    @open=\"closeWay = 'self'\"\n    v-model:visible=\"showPopup\"\n    :class=\"classes\"\n  >\n    <view-block class=\"nut-address\">\n      <view-block class=\"nut-address__header\">\n        <view-block class=\"arrow-back\" @click=\"switchModule\">\n          <nut-icon\n            :name=\"backBtnIcon\"\n            color=\"#cccccc\"\n            v-if=\"privateType == 'custom' && backBtnIcon\"\n          ></nut-icon>\n        </view-block>\n\n        <view-block class=\"nut-address__header__title\">\n          {{ privateType == 'custom' ? customAddressTitle : existAddressTitle }}\n        </view-block>\n\n        <view-block class=\"arrow-close\" @click=\"handClose('cross')\">\n          <nut-icon\n            v-if=\"closeBtnIcon\"\n            :name=\"closeBtnIcon\"\n            color=\"#cccccc\"\n            size=\"18px\"\n          ></nut-icon>\n        </view-block>\n      </view-block>\n\n      <!-- 请选择 -->\n      <view-block class=\"custom-address\" v-if=\"privateType == 'custom'\">\n        <view-block class=\"region-tab\">\n          <view-block\n            class=\"tab-item\"\n            :class=\"[index == tabIndex ? 'active' : '',key]\"\n            v-for=\"(item, key, index) in selectedRegion\"\n            :key=\"index\"\n            :ref=\"key\"\n            @click=\"changeRegionTab(item, key, index)\"\n          >\n            <view>{{ getTabName(item, index) }}</view>\n          </view-block>\n\n          <view-block class=\"region-tab-line\" ref=\"regionLine\" :style=\"{ left: lineDistance + 'px' }\"></view-block>\n        </view-block>\n\n        <view-block class=\"region-con\">\n          <ul class=\"region-group\">\n            <li\n              v-for=\"(item, index) in regionList[tabName[tabIndex]]\"\n              :key=\"index\"\n              class=\"region-item\"\n              :class=\"[\n                selectedRegion[tabName[tabIndex]].id == item.id ? 'active' : ''\n              ]\"\n              @click=\"nextAreaList(item)\"\n            >\n              <nut-icon\n                class=\"region-item-icon\"\n                type=\"self\"\n                :name=\"selectedIcon\"\n                color=\"#FA2C19\"\n                size=\"13px\"\n                v-if=\"selectedRegion[tabName[tabIndex]].id == item.id\"\n              ></nut-icon\n              >{{ item.name }}\n            </li>\n          </ul>\n        </view-block>\n      </view-block>\n\n      <!-- 配送至 -->\n      <view-block class=\"exist-address\" v-else-if=\"privateType == 'exist'\">\n        <div class=\"exist-address-group\">\n          <ul class=\"exist-ul\">\n            <li\n              class=\"exist-item\"\n              :class=\"[item.selectedAddress ? 'active' : '']\"\n              v-for=\"(item, index) in existAddress\"\n              :key=\"index\"\n              @click=\"selectedExist(item)\"\n            >\n              <nut-icon\n                class=\"exist-item-icon\"\n                type=\"self\"\n                :name=\"item.selectedAddress ? selectedIcon : defaultIcon\"\n                :color=\"item.selectedAddress ? '#FA2C19' : ''\"\n                size=\"13px\"\n              ></nut-icon>\n\n              <view>{{\n                item.provinceName +\n                  item.cityName +\n                  item.countyName +\n                  item.townName +\n                  item.addressDetail\n              }}</view>\n            </li>\n          </ul>\n        </div>\n\n        <div\n          class=\"choose-other\"\n          @click=\"switchModule\"\n          v-if=\"isShowCustomAddress\"\n        >\n          <div class=\"btn\">{{ customAndExistTitle }}</div>\n        </div>\n      </view-block>\n    </view-block>\n  </nut-popup>\n</template>\n<script lang=\"ts\">\nimport { reactive, ref, toRefs, watch, nextTick, computed } from 'vue';\nimport { createComponent } from './../../../../../../packages/utils/create';\nimport Icon from './../icon/index.taro.vue';\nimport Popup from './../popup/index.taro.vue';\nimport Taro from '@tarojs/taro';\n\nconst { create, componentName } = createComponent('address');\n\ninterface RegionData {\n  name: string;\n  [key: string]: any;\n}\ninterface Region {\n  province: RegionData[];\n  city: RegionData[];\n  country: RegionData[];\n  town: RegionData[];\n  [key: string]: any;\n}\n\ninterface AddressList {\n  id?: string | number;\n  provinceName: string;\n  cityName: string;\n  countyName: string;\n  townName: string;\n  addressDetail: string;\n  selectedAddress: boolean;\n}\nexport default create({\n  inheritAttrs: false,\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'custom'\n    },\n    customAddressTitle: {\n      type: String,\n      default: '请选择所在地区'\n    },\n    province: {\n      type: Array,\n      default: () => []\n    },\n    city: {\n      type: Array,\n      default: () => []\n    }, // 市\n    country: {\n      type: Array,\n      default: () => []\n    }, // 县\n    town: {\n      type: Array,\n      default: () => []\n    }, // 镇\n    isShowCustomAddress: {\n      type: Boolean,\n      default: true\n    }, // 是否显示‘选择其他地区’按钮 type=‘exist’ 生效\n    existAddress: {\n      type: Array,\n      default: () => []\n    }, // 现存地址列表\n    existAddressTitle: {\n      type: String,\n      default: '配送至'\n    },\n    customAndExistTitle: {\n      type: String,\n      default: '选择其他地址'\n    },\n    defaultIcon: {\n      // 地址选择列表前 - 默认的图标\n      type: String,\n      default: 'location2'\n    },\n    selectedIcon: {\n      // 地址选择列表前 - 选中的图标\n      type: String,\n      default: 'Check'\n    },\n    closeBtnIcon: {\n      // 关闭弹框按钮 icon\n      type: String,\n      default: 'circle-close'\n    },\n    backBtnIcon: {\n      // 选择其他地址左上角返回 icon\n      type: String,\n      default: 'left'\n    }\n  },\n  components: {\n    'nut-icon': Icon,\n    'nut-popup': Popup\n  },\n  emits: [\n    'update:visible',\n    'type',\n    'change',\n    'selected',\n    'close',\n    'close-mask',\n    'switch-module'\n  ],\n\n  setup(props, { emit }) {\n    const classes = computed(() => {\n      const prefixCls = componentName;\n      return {\n        [prefixCls]: true\n      };\n    });\n\n    const regionLine = ref<null | HTMLElement>(null);\n\n    const tabItemRef = reactive({\n      province: ref<null | HTMLElement>(null),\n      city: ref<null | HTMLElement>(null),\n      country: ref<null | HTMLElement>(null),\n      town: ref<null | HTMLElement>(null)\n    });\n    const showPopup = ref(props.visible);\n    const privateType = ref(props.type);\n    const tabIndex = ref(0);\n    const tabName = ref(['province', 'city', 'country', 'town']);\n\n    const regionList = reactive({\n      province: props.province,\n      city: props.city,\n      country: props.country,\n      town: props.town\n    });\n\n    const selectedRegion = reactive({\n      province: {} as RegionData,\n      city: {} as RegionData,\n      country: {} as RegionData,\n      town: {} as RegionData\n    }); //已选择的 省、市、县、镇\n\n    let selectedExistAddress = reactive({}); // 当前选择的地址\n\n    const closeWay = ref('self');\n\n    const lineDistance = ref(20);\n\n    //获取已选地区列表名称\n    const getTabName = (item: RegionData, index: number) => {\n      if (item.name) return item.name;\n\n      if (tabIndex.value < index) {\n        return item.name;\n      } else {\n        return '请选择';\n      }\n    };\n    // 手动关闭 点击叉号(cross)，或者蒙层(mask)\n    const handClose = (type = 'self') => {\n      if (!props.closeBtnIcon) return;\n\n      closeWay.value = type == 'cross' ? 'cross' : 'self';\n\n      showPopup.value = false;\n    };\n    // 点击遮罩层关闭\n    const clickOverlay = () => {\n      closeWay.value = 'mask';\n    };\n    // 移动下面的红线\n    const lineAnimation = () => {\n    \n      setTimeout(()=>{\n          Taro.createSelectorQuery().selectAll(`.${tabName.value[tabIndex.value]}`).boundingClientRect((rects) => {\n            \n            (rects as any).forEach((rect)=>{\n                if(rect.width > 0) lineDistance.value = rect.left;\n            })\n            \n          }).exec()\n      },100)\n    };\n    // 切换下一级列表\n    const nextAreaList = (item: RegionData | string) => {\n      // onchange 接收的参数\n      const calBack = {\n        next: '',\n        value: '',\n        custom: tabName.value[tabIndex.value]\n      };\n\n      (selectedRegion as any)[tabName.value[tabIndex.value]] = item;\n\n      for (let i = tabIndex.value; i < tabIndex.value - 1; i++) {\n        (selectedRegion as any)[tabName.value[i + 1]] = {};\n      }\n\n      if (tabIndex.value < 3) {\n        tabIndex.value = tabIndex.value + 1;\n\n        lineAnimation();\n\n        // 切换下一个\n        calBack.next = tabName.value[tabIndex.value];\n        calBack.value = item as string;\n        emit('change', calBack);\n      } else {\n        handClose();\n      }\n    };\n    //切换地区Tab\n    const changeRegionTab = (item: RegionData, key: number, index: number) => {\n      tabIndex.value = index;\n      lineAnimation();\n    };\n\n    // 选择现有地址\n    const selectedExist = (item: RegionData) => {\n      const copyExistAdd = props.existAddress as AddressList[];\n      let prevExistAdd = {};\n\n      copyExistAdd.forEach((list, index) => {\n        if (list && (list as AddressList).selectedAddress) {\n          prevExistAdd = list;\n        }\n        (list as AddressList).selectedAddress = false;\n      });\n\n      item.selectedAddress = true;\n\n      selectedExistAddress = item;\n\n      emit('selected', prevExistAdd, item, copyExistAdd);\n\n      handClose();\n    };\n    // 初始化\n    const initAddress = () => {\n      for (let i = 0; i < tabName.value.length; i++) {\n        (selectedRegion as any)[tabName.value[i]] = {};\n      }\n      tabIndex.value = 0;\n      lineAnimation();\n    };\n\n    // 关闭\n    const close = () => {\n      const resCopy = Object.assign(\n        {\n          addressIdStr: '',\n          addressStr: ''\n        },\n        selectedRegion\n      );\n\n      const res = {\n        data: {},\n        type: privateType.value\n      };\n\n      if (privateType.value == 'custom') {\n        const { province, city, country, town } = resCopy;\n\n        resCopy.addressIdStr = [\n          (province as RegionData).id || 0,\n          (city as RegionData).id || 0,\n          (country as RegionData).id || 0,\n          (town as RegionData).id || 0\n        ].join('_');\n        resCopy.addressStr = [\n          (province as RegionData).name,\n          (city as RegionData).name,\n          (country as RegionData).name,\n          (town as RegionData).name\n        ].join('');\n        res.data = resCopy;\n      } else {\n        res.data = selectedExistAddress;\n      }\n\n      initAddress();\n\n      if (closeWay.value == 'self') {\n        emit('close', res);\n      } else {\n        emit('close-mask', { closeWay: closeWay });\n      }\n      emit('update:visible', false);\n    };\n\n    // 选择其他地址\n    const switchModule = () => {\n      if (privateType.value == 'exist') {\n        privateType.value = 'custom';\n      } else {\n        privateType.value = 'exist';\n      }\n\n      initAddress();\n\n      emit('switch-module', { type: privateType.value });\n    };\n\n    watch(\n      () => props.visible,\n      value => {\n        showPopup.value = value;\n      }\n    );\n    // watch(\n    //   () => props.type,\n    //   (value) => {\n    //     privateType.value = value;\n    //   }\n    // );\n\n    watch(\n      () => showPopup.value,\n      value => {\n        if (value == false) {\n          close();\n        }\n      }\n    );\n\n    watch(\n      () => props.province,\n      value => {\n        regionList.province = value;\n      }\n    );\n    watch(\n      () => props.city,\n      value => {\n        regionList.city = value;\n      }\n    );\n    watch(\n      () => props.country,\n      value => {\n        regionList.country = value;\n      }\n    );\n    watch(\n      () => props.town,\n      value => {\n        regionList.town = value;\n      }\n    );\n\n    watch(\n      () => props.existAddress,\n      value => {\n        //  existAddress.value = value;\n        value.forEach((item, index) => {\n          if ((item as AddressList).selectedAddress) {\n            selectedExistAddress = item as {};\n          }\n        });\n      }\n    );\n\n    return {\n      classes,\n      showPopup,\n      privateType,\n      tabIndex,\n      tabName,\n      regionList,\n      selectedRegion,\n      selectedExistAddress,\n      switchModule,\n      closeWay,\n      close,\n      getTabName,\n      nextAreaList,\n      regionLine,\n      lineDistance,\n      changeRegionTab,\n      selectedExist,\n      clickOverlay,\n      handClose,\n      ...toRefs(props),\n      ...toRefs(tabItemRef)\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\">\n@import '../../../../../../packages/__VUE/address/index.scss';\n</style>\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/taro-loader/lib/raw.js!./demo.vue\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/address/demo', {root:{cn:[]}}, config || {}))\n\n","export { default } from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./demo.vue?vue&type=script&lang=ts\"; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./demo.vue?vue&type=script&lang=ts\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js??ref--1-oneOf-0-1!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/dist/cjs.js??ref--1-oneOf-0-4!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./demo.vue?vue&type=style&index=0&id=3e528abc&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/templateLoader.js??ref--6!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./demo.vue?vue&type=template&id=3e528abc&scoped=true\"","import { render } from \"./index.taro.vue?vue&type=template&id=5613d305\"\nimport script from \"./index.taro.vue?vue&type=script&lang=ts\"\nexport * from \"./index.taro.vue?vue&type=script&lang=ts\"\n\nimport \"./index.taro.vue?vue&type=style&index=0&id=5613d305&lang=scss\"\nscript.render = render\n/* hot reload */\nif (module.hot) {\n  script.__hmrId = \"5613d305\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('5613d305', script)) {\n    api.reload('5613d305', script)\n  }\n  \n  module.hot.accept(\"./index.taro.vue?vue&type=template&id=5613d305\", () => {\n    api.rerender('5613d305', render)\n  })\n\n}\n\nscript.__file = \"src/pages/address/index.taro.vue\"\n\nexport default script","export { default } from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.taro.vue?vue&type=script&lang=ts\"; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.taro.vue?vue&type=script&lang=ts\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js??ref--1-oneOf-0-1!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/dist/cjs.js??ref--1-oneOf-0-4!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.taro.vue?vue&type=style&index=0&id=5613d305&lang=scss\"","export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/templateLoader.js??ref--6!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.taro.vue?vue&type=template&id=5613d305\""],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAYA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACiEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA+BA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAlBA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAoBA;AApMA;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AA5DA;AAkEA;AACA;AACA;AAFA;AAIA;AAUA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AAMA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAuBA;AAzWA;;;;;;;;;;;;;;;;;;;;;;ADjJA;;;AACA;AAAA;AAAA;AACA;AAkBA;AAAA;AAAA;AACA;AAkBA;AAAA;AAAA;AACA;AAoBA;AAAA;AAAA;AACA;;;;;;;;AA7DA;AAGA;AACA;AACA;AACA;AACA;;AALA;AAQA;;AAAA;AAQA;AAPA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AATA;AAaA;AACA;AACA;AACA;AACA;;AALA;AAQA;;AAAA;AAQA;AAPA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AATA;AAaA;AACA;AACA;AACA;AACA;;AALA;AAQA;;AAAA;AAUA;AATA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXA;AAeA;AACA;AACA;AACA;AACA;;AALA;AAQA;;AAAA;AAcA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfA;;;;;;;;;;;;;;;;;;;AClBA;;;AA0BA;;;AACA;;;AAgCA;;;;;;;;;AA7GA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAAA;AA4GA;AA3GA;AA2GA;AAzGA;AAAA;AAAA;AAwGA;AAvGA;AAAA;AAAA;AAqBA;AApBA;AAAA;AAAA;AAAA;AAMA;AALA;AAAA;AAIA;AAHA;AACA;AAEA;;AAJA;AAAA;;;;AADA;;AAAA;AAQA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;;;;AADA;AAIA;AAAA;AAAA;AAAA;AAOA;AANA;AAAA;AAKA;AAHA;AACA;AACA;AACA;;AALA;AAAA;;;;AADA;AAZA;;;;AADA;AA+DA;AAvCA;AAuCA;AAtCA;AAAA;AAAA;AAaA;AATA;AAAA;AAHA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AASA;;AATA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AARA;;;;AAJA;AAeA;AAsBA;AArBA;AAAA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAWA;AADA;AAPA;AACA;AACA;AACA;AACA;AAGA;;AARA;AAQA;AAjBA;;AAAA;AAkBA;;AAlBA;AADA;;;;AADA;AAfA;;;;AADA;AA8EA;AAAA;AApCA;AAoCA;AAnCA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAiBA;AAdA;AACA;AACA;AACA;AACA;AACA;;AANA;AASA;AADA;;AAfA;AAsBA;;AAtBA;AAgCA;AALA;AACA;AAAA;AAAA;AAIA;AADA;AAAA;AAjCA;;;;AADA;;AAAA;AAlEA;;;;AADA;AAAA;;;;AARA;;AAAA;;;;;;;;;;;;ACDA;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAYA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;A","sourceRoot":""}